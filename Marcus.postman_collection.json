{
	"info": {
		"_postman_id": "b2d6be3b-92ff-4232-b5a0-3e9f11e6114b",
		"name": "Marcus",
		"description": "OpenAPI specification for Marcus API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18563608"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"register"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Login user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/token/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"token",
								""
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/token/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"token",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"access\": \"<string>\",\n  \"refresh\": \"<string>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/token/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"token",
										""
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Reconnect user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refresh\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/token/refresh/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"token",
								"refresh",
								""
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"refresh\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/token/refresh/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"token",
										"refresh",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"access\": \"<string>\",\n  \"refresh\": \"<string>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"refresh\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/token/refresh/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"token",
										"refresh",
										""
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "List users stats",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<number>\",\n    \"username\": \"<string>\",\n    \"user_critics\": \"<number>\",\n    \"user_masterpieces\": \"<number>\",\n    \"user_watchlists\": \"<number>\",\n    \"user_votes\": \"<number>\"\n  },\n  {\n    \"id\": \"<number>\",\n    \"username\": \"<string>\",\n    \"user_critics\": \"<number>\",\n    \"user_masterpieces\": \"<number>\",\n    \"user_watchlists\": \"<number>\",\n    \"user_votes\": \"<number>\"\n  }\n]"
						}
					]
				},
				{
					"name": "Retrieve user's stats",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/:user_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":user_id"
							],
							"variable": [
								{
									"key": "user_id",
									"value": "<integer>",
									"description": "(Required) User unique identifier"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<number>\",\n  \"username\": \"<string>\",\n  \"user_critics\": \"<number>\",\n  \"user_masterpieces\": \"<number>\",\n  \"user_watchlists\": \"<number>\",\n  \"user_votes\": \"<number>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Music",
			"item": [
				{
					"name": "critics",
					"item": [
						{
							"name": "List critics",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/music/critics?page=<integer>&user_id=<integer>&artist_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"music",
										"critics"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>",
											"description": "Filter by page"
										},
										{
											"key": "user_id",
											"value": "<integer>",
											"description": "Filter by user"
										},
										{
											"key": "artist_id",
											"value": "<string>",
											"description": "Filter by artist"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/music/critics?page=<integer>&user_id=<integer>&artist_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"music",
												"critics"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>",
													"description": "Filter by page"
												},
												{
													"key": "user_id",
													"value": "<integer>",
													"description": "Filter by user"
												},
												{
													"key": "artist_id",
													"value": "<string>",
													"description": "Filter by artist"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"total\": \"<integer>\",\n  \"from\": \"<integer>\",\n  \"to\": \"<integer>\",\n  \"is_last_page\": \"<boolean>\",\n  \"data\": {\n    \"album_id\": \"<string>\",\n    \"album_name\": \"<string>\",\n    \"artist_id\": \"<string>\",\n    \"artist_name\": \"<string>\",\n    \"image_url\": \"<string>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"username\": \"<string>\"\n    },\n    \"content\": \"<string>\",\n    \"id\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Add critic",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"<string>\",\n  \"album_id\": \"<string>\",\n  \"album_name\": \"<string>\",\n  \"artist_id\": \"<string>\",\n  \"artist_name\": \"<string>\",\n  \"image_url\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/music/critics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"music",
										"critics"
									]
								}
							},
							"response": [
								{
									"name": "Critic created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"<string>\",\n  \"album_id\": \"<string>\",\n  \"album_name\": \"<string>\",\n  \"artist_id\": \"<string>\",\n  \"artist_name\": \"<string>\",\n  \"image_url\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/music/critics",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"music",
												"critics"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"<string>\",\n  \"album_id\": \"<string>\",\n  \"album_name\": \"<string>\",\n  \"artist_id\": \"<string>\",\n  \"artist_name\": \"<string>\",\n  \"image_url\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/music/critics",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"music",
												"critics"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"field_name\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
								},
								{
									"name": "Unauthorized because token is not valid or has not been provided",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"<string>\",\n  \"album_id\": \"<string>\",\n  \"album_name\": \"<string>\",\n  \"artist_id\": \"<string>\",\n  \"artist_name\": \"<string>\",\n  \"image_url\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/music/critics",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"music",
												"critics"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Remove critic",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/music/critics?id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"music",
										"critics"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Delete critic from its id"
										}
									]
								}
							},
							"response": [
								{
									"name": "Critic removed",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/music/critics?id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"music",
												"critics"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Delete critic from its id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Unauthorized because token is not valid or has not been provided",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/music/critics?id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"music",
												"critics"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Delete critic from its id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/music/critics?id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"music",
												"critics"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Delete critic from its id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "votes",
					"item": [
						{
							"name": "List votes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/music/votes?page=<integer>&user_id=<integer>&artist_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"music",
										"votes"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>",
											"description": "Filter by page"
										},
										{
											"key": "user_id",
											"value": "<integer>",
											"description": "Filter by user"
										},
										{
											"key": "artist_id",
											"value": "<string>",
											"description": "Filter by artist"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/music/votes?page=<integer>&user_id=<integer>&artist_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"music",
												"votes"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>",
													"description": "Filter by page"
												},
												{
													"key": "user_id",
													"value": "<integer>",
													"description": "Filter by user"
												},
												{
													"key": "artist_id",
													"value": "<string>",
													"description": "Filter by artist"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"total\": \"<integer>\",\n  \"from\": \"<integer>\",\n  \"to\": \"<integer>\",\n  \"is_last_page\": \"<boolean>\",\n  \"data\": {\n    \"album_id\": \"<string>\",\n    \"album_name\": \"<string>\",\n    \"artist_id\": \"<string>\",\n    \"artist_name\": \"<string>\",\n    \"image_url\": \"<string>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"username\": \"<string>\"\n    },\n    \"value\": 0,\n    \"id\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Add vote",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"value\": 2,\n  \"album_id\": \"<string>\",\n  \"album_name\": \"<string>\",\n  \"artist_id\": \"<string>\",\n  \"artist_name\": \"<string>\",\n  \"image_url\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/music/votes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"music",
										"votes"
									]
								}
							},
							"response": [
								{
									"name": "Vote created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": 2,\n  \"album_id\": \"<string>\",\n  \"album_name\": \"<string>\",\n  \"artist_id\": \"<string>\",\n  \"artist_name\": \"<string>\",\n  \"image_url\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/music/votes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"music",
												"votes"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": 2,\n  \"album_id\": \"<string>\",\n  \"album_name\": \"<string>\",\n  \"artist_id\": \"<string>\",\n  \"artist_name\": \"<string>\",\n  \"image_url\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/music/votes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"music",
												"votes"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"field_name\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
								},
								{
									"name": "Unauthorized because token is not valid or has not been provided",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": 2,\n  \"album_id\": \"<string>\",\n  \"album_name\": \"<string>\",\n  \"artist_id\": \"<string>\",\n  \"artist_name\": \"<string>\",\n  \"image_url\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/music/votes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"music",
												"votes"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Remove vote",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/music/votes?id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"music",
										"votes"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Delete vote from its id"
										}
									]
								}
							},
							"response": [
								{
									"name": "Vote removed",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/music/votes?id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"music",
												"votes"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Delete vote from its id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Unauthorized because token is not valid or has not been provided",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/music/votes?id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"music",
												"votes"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Delete vote from its id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/music/votes?id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"music",
												"votes"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Delete vote from its id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "masterpieces",
					"item": [
						{
							"name": "List masterpieces",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/music/masterpieces?page=<integer>&user_id=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"music",
										"masterpieces"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>",
											"description": "Filter by page"
										},
										{
											"key": "user_id",
											"value": "<integer>",
											"description": "Filter by user"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/music/masterpieces?page=<integer>&user_id=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"music",
												"masterpieces"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>",
													"description": "Filter by page"
												},
												{
													"key": "user_id",
													"value": "<integer>",
													"description": "Filter by user"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"total\": \"<integer>\",\n  \"from\": \"<integer>\",\n  \"to\": \"<integer>\",\n  \"is_last_page\": \"<boolean>\",\n  \"data\": {\n    \"album_id\": \"<string>\",\n    \"album_name\": \"<string>\",\n    \"artist_id\": \"<string>\",\n    \"artist_name\": \"<string>\",\n    \"image_url\": \"<string>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"username\": \"<string>\"\n    },\n    \"id\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Add masterpiece",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"album_id\": \"<string>\",\n  \"album_name\": \"<string>\",\n  \"artist_id\": \"<string>\",\n  \"artist_name\": \"<string>\",\n  \"image_url\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/music/masterpieces",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"music",
										"masterpieces"
									]
								}
							},
							"response": [
								{
									"name": "Masterpiece created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"album_id\": \"<string>\",\n  \"album_name\": \"<string>\",\n  \"artist_id\": \"<string>\",\n  \"artist_name\": \"<string>\",\n  \"image_url\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/music/masterpieces",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"music",
												"masterpieces"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"album_id\": \"<string>\",\n  \"album_name\": \"<string>\",\n  \"artist_id\": \"<string>\",\n  \"artist_name\": \"<string>\",\n  \"image_url\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/music/masterpieces",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"music",
												"masterpieces"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"field_name\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
								},
								{
									"name": "Unauthorized because token is not valid or has not been provided",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"album_id\": \"<string>\",\n  \"album_name\": \"<string>\",\n  \"artist_id\": \"<string>\",\n  \"artist_name\": \"<string>\",\n  \"image_url\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/music/masterpieces",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"music",
												"masterpieces"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Remove masterpiece",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/music/masterpieces?id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"music",
										"masterpieces"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Delete masterpiece from its id"
										}
									]
								}
							},
							"response": [
								{
									"name": "Masterpiece removed",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/music/masterpieces?id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"music",
												"masterpieces"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Delete masterpiece from its id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Unauthorized because token is not valid or has not been provided",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/music/masterpieces?id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"music",
												"masterpieces"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Delete masterpiece from its id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/music/masterpieces?id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"music",
												"masterpieces"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Delete masterpiece from its id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "playlists",
					"item": [
						{
							"name": "List playlists",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/music/playlists?page=<integer>&user_id=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"music",
										"playlists"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>",
											"description": "Filter by page"
										},
										{
											"key": "user_id",
											"value": "<integer>",
											"description": "Filter by user"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/music/playlists?page=<integer>&user_id=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"music",
												"playlists"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>",
													"description": "Filter by page"
												},
												{
													"key": "user_id",
													"value": "<integer>",
													"description": "Filter by user"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"total\": \"<integer>\",\n  \"from\": \"<integer>\",\n  \"to\": \"<integer>\",\n  \"is_last_page\": \"<boolean>\",\n  \"data\": {\n    \"album_id\": \"<string>\",\n    \"album_name\": \"<string>\",\n    \"artist_id\": \"<string>\",\n    \"artist_name\": \"<string>\",\n    \"image_url\": \"<string>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"username\": \"<string>\"\n    },\n    \"id\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Add to playlist",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"album_id\": \"<string>\",\n  \"album_name\": \"<string>\",\n  \"artist_id\": \"<string>\",\n  \"artist_name\": \"<string>\",\n  \"image_url\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/music/playlists",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"music",
										"playlists"
									]
								}
							},
							"response": [
								{
									"name": "Masterpiece created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"album_id\": \"<string>\",\n  \"album_name\": \"<string>\",\n  \"artist_id\": \"<string>\",\n  \"artist_name\": \"<string>\",\n  \"image_url\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/music/playlists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"music",
												"playlists"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"album_id\": \"<string>\",\n  \"album_name\": \"<string>\",\n  \"artist_id\": \"<string>\",\n  \"artist_name\": \"<string>\",\n  \"image_url\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/music/playlists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"music",
												"playlists"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"field_name\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
								},
								{
									"name": "Unauthorized because token is not valid or has not been provided",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"album_id\": \"<string>\",\n  \"album_name\": \"<string>\",\n  \"artist_id\": \"<string>\",\n  \"artist_name\": \"<string>\",\n  \"image_url\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/music/playlists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"music",
												"playlists"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Remove album from playlist",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/music/playlists?id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"music",
										"playlists"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Delete from playlist from its id"
										}
									]
								}
							},
							"response": [
								{
									"name": "Album removed from playlist",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/music/playlists?id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"music",
												"playlists"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Delete from playlist from its id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Unauthorized because token is not valid or has not been provided",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/music/playlists?id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"music",
												"playlists"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Delete from playlist from its id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/music/playlists?id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"music",
												"playlists"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Delete from playlist from its id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Cinema",
			"item": [
				{
					"name": "votes",
					"item": [
						{
							"name": "List votes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/votes?page=<integer>&user_id=<integer>&movie_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"votes"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>",
											"description": "Filter by page"
										},
										{
											"key": "user_id",
											"value": "<integer>",
											"description": "Filter by user"
										},
										{
											"key": "movie_id",
											"value": "<string>",
											"description": "Filter by movie"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/votes?page=<integer>&user_id=<integer>&movie_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"votes"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>",
													"description": "Filter by page"
												},
												{
													"key": "user_id",
													"value": "<integer>",
													"description": "Filter by user"
												},
												{
													"key": "movie_id",
													"value": "<string>",
													"description": "Filter by movie"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"total\": \"<integer>\",\n  \"from\": \"<integer>\",\n  \"to\": \"<integer>\",\n  \"is_last_page\": \"<boolean>\",\n  \"data\": {\n    \"movie_id\": \"<string>\",\n    \"movie_name\": \"<string>\",\n    \"platform\": \"tv\",\n    \"user_id\": \"<integer>\",\n    \"user_name\": \"<string>\",\n    \"value\": 2\n  }\n}"
								}
							]
						},
						{
							"name": "Add Vote",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"movie_id\": \"<string>\",\n  \"movie_name\": \"<string>\",\n  \"value\": 0,\n  \"platform\": \"tv\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/votes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"votes"
									]
								}
							},
							"response": [
								{
									"name": "Vote created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"movie_id\": \"<string>\",\n  \"movie_name\": \"<string>\",\n  \"value\": 0,\n  \"platform\": \"tv\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/votes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"votes"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"movie_id\": \"<string>\",\n  \"movie_name\": \"<string>\",\n  \"value\": 0,\n  \"platform\": \"tv\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/votes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"votes"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"field_name\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
								},
								{
									"name": "Unauthorized because token is not valid or has not been provided",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"movie_id\": \"<string>\",\n  \"movie_name\": \"<string>\",\n  \"value\": 0,\n  \"platform\": \"tv\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/votes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"votes"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Remove vote",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/votes?movie_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"votes"
									],
									"query": [
										{
											"key": "movie_id",
											"value": "<string>",
											"description": "(Required) Delete vote from its movie id"
										}
									]
								}
							},
							"response": [
								{
									"name": "Vote removed",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/votes?movie_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"votes"
											],
											"query": [
												{
													"key": "movie_id",
													"value": "<string>",
													"description": "(Required) Delete vote from its movie id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Unauthorized because token is not valid or has not been provided",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/votes?movie_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"votes"
											],
											"query": [
												{
													"key": "movie_id",
													"value": "<string>",
													"description": "(Required) Delete vote from its movie id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/votes?movie_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"votes"
											],
											"query": [
												{
													"key": "movie_id",
													"value": "<string>",
													"description": "(Required) Delete vote from its movie id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "critics",
					"item": [
						{
							"name": "List critics",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/critics?page=<integer>&user_id=<integer>&movie_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"critics"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>",
											"description": "Filter by page"
										},
										{
											"key": "user_id",
											"value": "<integer>",
											"description": "Filter by user"
										},
										{
											"key": "movie_id",
											"value": "<string>",
											"description": "Filter by movie"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/critics?page=<integer>&user_id=<integer>&movie_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"critics"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>",
													"description": "Filter by page"
												},
												{
													"key": "user_id",
													"value": "<integer>",
													"description": "Filter by user"
												},
												{
													"key": "movie_id",
													"value": "<string>",
													"description": "Filter by movie"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"total\": \"<integer>\",\n  \"from\": \"<integer>\",\n  \"to\": \"<integer>\",\n  \"is_last_page\": \"<boolean>\",\n  \"data\": {\n    \"movie_id\": \"<string>\",\n    \"movie_name\": \"<string>\",\n    \"platform\": \"tv\",\n    \"user_id\": \"<integer>\",\n    \"user_name\": \"<string>\",\n    \"content\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Add critic",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"movie_id\": \"<string>\",\n  \"movie_name\": \"<string>\",\n  \"content\": \"<string>\",\n  \"platform\": \"tv\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/critics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"critics"
									]
								}
							},
							"response": [
								{
									"name": "Critic created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"movie_id\": \"<string>\",\n  \"movie_name\": \"<string>\",\n  \"content\": \"<string>\",\n  \"platform\": \"tv\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/critics",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"critics"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"movie_id\": \"<string>\",\n  \"movie_name\": \"<string>\",\n  \"content\": \"<string>\",\n  \"platform\": \"tv\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/critics",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"critics"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"field_name\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
								},
								{
									"name": "Unauthorized because token is not valid or has not been provided",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"movie_id\": \"<string>\",\n  \"movie_name\": \"<string>\",\n  \"content\": \"<string>\",\n  \"platform\": \"tv\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/critics",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"critics"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Remove critic",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/critics?movie_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"critics"
									],
									"query": [
										{
											"key": "movie_id",
											"value": "<string>",
											"description": "(Required) Delete critic from its movie id"
										}
									]
								}
							},
							"response": [
								{
									"name": "Critic removed",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/critics?movie_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"critics"
											],
											"query": [
												{
													"key": "movie_id",
													"value": "<string>",
													"description": "(Required) Delete critic from its movie id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Unauthorized because token is not valid or has not been provided",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/critics?movie_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"critics"
											],
											"query": [
												{
													"key": "movie_id",
													"value": "<string>",
													"description": "(Required) Delete critic from its movie id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/critics?movie_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"critics"
											],
											"query": [
												{
													"key": "movie_id",
													"value": "<string>",
													"description": "(Required) Delete critic from its movie id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "masterpieces",
					"item": [
						{
							"name": "List masterpieces",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/masterpieces?page=<integer>&user_id=<integer>&movie_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"masterpieces"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>",
											"description": "Filter by page"
										},
										{
											"key": "user_id",
											"value": "<integer>",
											"description": "Filter by user"
										},
										{
											"key": "movie_id",
											"value": "<string>",
											"description": "Filter by movie"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/masterpieces?page=<integer>&user_id=<integer>&movie_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"masterpieces"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>",
													"description": "Filter by page"
												},
												{
													"key": "user_id",
													"value": "<integer>",
													"description": "Filter by user"
												},
												{
													"key": "movie_id",
													"value": "<string>",
													"description": "Filter by movie"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"total\": \"<integer>\",\n  \"from\": \"<integer>\",\n  \"to\": \"<integer>\",\n  \"is_last_page\": \"<boolean>\",\n  \"data\": {\n    \"movie_id\": \"<string>\",\n    \"movie_name\": \"<string>\",\n    \"platform\": \"movie\",\n    \"user_id\": \"<integer>\",\n    \"user_name\": \"<string>\",\n    \"movie_details\": {\n      \"released_date\": \"<string>\",\n      \"poster_path\": \"<string>\",\n      \"backdrop_path\": \"<string>\",\n      \"synopsis\": \"<string>\"\n    }\n  }\n}"
								}
							]
						},
						{
							"name": "Add masterpiece",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"movie_id\": \"<string>\",\n  \"movie_name\": \"<string>\",\n  \"platform\": \"tv\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/masterpieces",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"masterpieces"
									]
								}
							},
							"response": [
								{
									"name": "Masterpiece created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"movie_id\": \"<string>\",\n  \"movie_name\": \"<string>\",\n  \"platform\": \"tv\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/masterpieces",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"masterpieces"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"movie_id\": \"<string>\",\n  \"movie_name\": \"<string>\",\n  \"platform\": \"tv\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/masterpieces",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"masterpieces"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"field_name\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
								},
								{
									"name": "Unauthorized because token is not valid or has not been provided",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"movie_id\": \"<string>\",\n  \"movie_name\": \"<string>\",\n  \"platform\": \"tv\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/masterpieces",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"masterpieces"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Remove masterpiece",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/masterpieces?movie_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"masterpieces"
									],
									"query": [
										{
											"key": "movie_id",
											"value": "<string>",
											"description": "(Required) Delete masterpiece from its movie id"
										}
									]
								}
							},
							"response": [
								{
									"name": "Masterpiece removed",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/masterpieces?movie_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"masterpieces"
											],
											"query": [
												{
													"key": "movie_id",
													"value": "<string>",
													"description": "(Required) Delete masterpiece from its movie id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Unauthorized because token is not valid or has not been provided",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/masterpieces?movie_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"masterpieces"
											],
											"query": [
												{
													"key": "movie_id",
													"value": "<string>",
													"description": "(Required) Delete masterpiece from its movie id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/masterpieces?movie_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"masterpieces"
											],
											"query": [
												{
													"key": "movie_id",
													"value": "<string>",
													"description": "(Required) Delete masterpiece from its movie id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "watchlists",
					"item": [
						{
							"name": "List watchlists",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/watchlists?page=<integer>&user_id=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"watchlists"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>",
											"description": "Filter by page"
										},
										{
											"key": "user_id",
											"value": "<integer>",
											"description": "Filter by user"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/watchlists?page=<integer>&user_id=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"watchlists"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>",
													"description": "Filter by page"
												},
												{
													"key": "user_id",
													"value": "<integer>",
													"description": "Filter by user"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"total\": \"<integer>\",\n  \"from\": \"<integer>\",\n  \"to\": \"<integer>\",\n  \"is_last_page\": \"<boolean>\",\n  \"data\": {\n    \"movie_id\": \"<string>\",\n    \"movie_name\": \"<string>\",\n    \"platform\": \"movie\",\n    \"user_id\": \"<integer>\",\n    \"user_name\": \"<string>\",\n    \"movie_details\": {\n      \"released_date\": \"<string>\",\n      \"poster_path\": \"<string>\",\n      \"backdrop_path\": \"<string>\",\n      \"synopsis\": \"<string>\"\n    }\n  }\n}"
								}
							]
						},
						{
							"name": "Add to watchlist",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"movie_id\": \"<string>\",\n  \"movie_name\": \"<string>\",\n  \"platform\": \"tv\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/watchlists",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"watchlists"
									]
								}
							},
							"response": [
								{
									"name": "Movie added to watchlist",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"movie_id\": \"<string>\",\n  \"movie_name\": \"<string>\",\n  \"platform\": \"tv\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/watchlists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"watchlists"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"movie_id\": \"<string>\",\n  \"movie_name\": \"<string>\",\n  \"platform\": \"tv\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/watchlists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"watchlists"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"field_name\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
								},
								{
									"name": "Unauthorized because token is not valid or has not been provided",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"movie_id\": \"<string>\",\n  \"movie_name\": \"<string>\",\n  \"platform\": \"tv\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/watchlists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"watchlists"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Remove movie from watchlist",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/watchlists?movie_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"watchlists"
									],
									"query": [
										{
											"key": "movie_id",
											"value": "<string>",
											"description": "(Required) Delete from watchlist from its movie id"
										}
									]
								}
							},
							"response": [
								{
									"name": "Movie removed from watchlist",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/watchlists?movie_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"watchlists"
											],
											"query": [
												{
													"key": "movie_id",
													"value": "<string>",
													"description": "(Required) Delete from watchlist from its movie id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Unauthorized because token is not valid or has not been provided",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/watchlists?movie_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"watchlists"
											],
											"query": [
												{
													"key": "movie_id",
													"value": "<string>",
													"description": "(Required) Delete from watchlist from its movie id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/watchlists?movie_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"watchlists"
											],
											"query": [
												{
													"key": "movie_id",
													"value": "<string>",
													"description": "(Required) Delete from watchlist from its movie id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8000/api"
		}
	]
}